name: Daily ETP Candidates

on:
  schedule:
    # Runs every day at 10:05 UTC (5:05 AM America/Chicago during CDT)
    - cron: "5 10 * * *"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Determine TODAY (UTC)
        run: echo "TODAY=$(date -u +%F)" >> $GITHUB_ENV

      - name: Run finder (fetch nasdaqtraded + build results)
        run: |
          python algo_symbols_finder.py --outdir results --date "${{ env.TODAY }}"
      - name: Lint syntax (quick)
        run: |
          python - <<'PY'
          import ast, sys, pathlib
          for p in ["algo_symbols_finder.py", "make_submission_pdf.py"]:
              ast.parse(pathlib.Path(p).read_text(encoding="utf-8"))
              print(f"OK: {p}")
          PY

      - name: Build submission PDF
        env:
          NETID: ${{ secrets.NETID }}
        run: |
          if [ -z "$NETID" ]; then
            echo "Warning: secrets.NETID not set. Using 'yournetid' in PDF filename."
            NETID="yournetid"
          fi
          python make_submission_pdf.py --netid "$NETID" --prefix "results/${{ env.TODAY }}/etp_candidates"

      - name: Show outputs (debug)
        run: |
          echo "PWD=$(pwd)"
          echo "Branch = ${{ github.ref_name }}"
          ls -la
          echo "---- results tree ----"
          ls -laR results || true
          echo "---- PDFs ----"
          ls -la *.pdf || true
      
      - name: Commit results
        env:
          BRANCH_NAME: ${{ github.ref_name }}
        run: |
          set -euxo pipefail
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
      
          # Stage EVERYTHING under results/ and any PDFs in the repo root.
          git add -A results || true
          # If you added the dated-PDF option (pdfs/...), this will stage that folder as well:
          git add -A pdfs || true
          # Stage root-level PDFs (pattern may not match every day, that's fine)
          shopt -s nullglob
          git add *.pdf || true
      
          echo "---- git status ----"
          git status --porcelain
      
          if [ -n "$(git status --porcelain)" ]; then
            git commit -m "daily(${{ env.TODAY }}): ETP candidates + PDF"
            # push explicitly to the current branch for reliability
            git push origin HEAD:${BRANCH_NAME}
          else
            echo "No changes to commit (nothing staged)."
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: daily-${{ env.TODAY }}
          path: |
            results/${{ env.TODAY }}/etp_candidates.csv
            results/${{ env.TODAY }}/etp_candidates.json
            *.pdf
